(()=>{"use strict";var e={853:(e,n,t)=>{t.d(n,{Z:()=>i});var a=t(537),o=t.n(a),d=t(645),r=t.n(d)()(o());r.push([e.id,"#content {\n    display: flex;\n    flex-direction: column;\n    font-family: 'Source Sans Pro', sans-serif;\n}\n\n/* Home Page */\n/* Navbar */\nul {\n    display: flex;\n    height: 70px;\n    width: 100%;\n    background-color: #6ACE46;\n    justify-content: space-around;\n}\n\n.nav-item {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\ninput[type=\"text\"]:focus {\n    outline: none;\n    font-family: 'Source Sans Pro', sans-serif;\n    font-size: inherit;\n}\n\ninput[type=\"text\"] {\n    border: none;\n    padding: 3px;\n}\n\nbutton {\n    border: none;\n}\n\nbutton:hover, a:hover, #menu-toggle-btn:hover {\n    cursor: pointer;\n}\n\n#search-bar-li i {\n    padding-left: 6px;\n}\n\n#logo-li img {\n    width: 50px;\n    height: 50px;\n}\n\nul i {\n    color: #FFF;\n    font-size: 24px;\n}\n\n/* Menu */\n#menu {\n    background-color: #9FE885;\n    display: none;\n    flex-direction: column;\n    width: 50%;\n    height: calc(100% - 70px);\n    position: fixed;\n    top: 70px;\n    z-index: 0;\n}\n\n/* TODO: add transition to slide in load */\n\n.menu-tab {\n    display: grid;\n    padding: 16px;\n    grid-template-columns: 1fr 4fr;\n    justify-content: center;\n    align-content: center;\n    font-size: 22px;\n}\n\n.menu-tab li {\n    padding-left: 5px;\n}\n\n/* Folders Heading */\n.heading {\n    /* z-index: -2; */\n    font-size: 30px;\n    padding: 30px 0 20px 0;\n    width: 100%;\n    text-align: center;\n}\n\n/* New Folder Form */\n.new-folder-container {\n    width: 100%;\n}\n\n#folder-form {\n    display: none;\n    justify-content: center;\n    align-items: center;\n}\n\n.new-folder {\n    display: grid;\n    row-gap: 10px;\n    background-color: #6ACE46;\n    width: 90%;\n    padding: 15px;\n    row-gap: 20px;\n}\n\n.form-title {\n    font-size: 22px;\n    text-align: left;\n}\n\n.form-content {\n    display: grid;\n    grid-template-columns: 1fr 2fr;\n    row-gap: 20px;\n}\n\n.form-btns {\n    grid-column: 1 / -1;\n    display: flex;\n    justify-content: space-around;\n}\n\n.form-btn {\n    padding: 5px;\n}\n\n/* Folders Directory */\n.folders-dir {\n    height: calc(100% - 70px);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\n#opaque {\n    position: absolute;\n    height: 0;\n    width: 0;\n    top: 70px;\n    left: 50%;\n}\n\n.heading-title {\n    display: inline-block;\n}\n\n.add-btn {\n    position: absolute;\n    right: 5px;\n    color: #6ACE46;\n}\n\n/* Folder */\n.folders {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    justify-content: center;\n    align-items: center;\n    font-size: 18px;\n}\n\n.folder {\n    display: flex;\n    width: 80%;\n    justify-content: space-between;\n    padding: 10px;\n}\n\n.act-btns a:not(:last-child) {\n    padding-right: 10px;\n}\n\n.folder:hover, .folder:active {\n    background-color: #6ACE46;\n    cursor: pointer;\n}\n","",{version:3,sources:["webpack://./src/styles/home-page.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;IACtB,0CAA0C;AAC9C;;AAEA,cAAc;AACd,WAAW;AACX;IACI,aAAa;IACb,YAAY;IACZ,WAAW;IACX,yBAAyB;IACzB,6BAA6B;AACjC;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,0CAA0C;IAC1C,kBAAkB;AACtB;;AAEA;IACI,YAAY;IACZ,YAAY;AAChB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,WAAW;IACX,eAAe;AACnB;;AAEA,SAAS;AACT;IACI,yBAAyB;IACzB,aAAa;IACb,sBAAsB;IACtB,UAAU;IACV,yBAAyB;IACzB,eAAe;IACf,SAAS;IACT,UAAU;AACd;;AAEA,0CAA0C;;AAE1C;IACI,aAAa;IACb,aAAa;IACb,8BAA8B;IAC9B,uBAAuB;IACvB,qBAAqB;IACrB,eAAe;AACnB;;AAEA;IACI,iBAAiB;AACrB;;AAEA,oBAAoB;AACpB;IACI,iBAAiB;IACjB,eAAe;IACf,sBAAsB;IACtB,WAAW;IACX,kBAAkB;AACtB;;AAEA,oBAAoB;AACpB;IACI,WAAW;AACf;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,aAAa;IACb,yBAAyB;IACzB,UAAU;IACV,aAAa;IACb,aAAa;AACjB;;AAEA;IACI,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,aAAa;AACjB;;AAEA;IACI,mBAAmB;IACnB,aAAa;IACb,6BAA6B;AACjC;;AAEA;IACI,YAAY;AAChB;;AAEA,sBAAsB;AACtB;IACI,yBAAyB;IACzB,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,kBAAkB;IAClB,SAAS;IACT,QAAQ;IACR,SAAS;IACT,SAAS;AACb;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,kBAAkB;IAClB,UAAU;IACV,cAAc;AAClB;;AAEA,WAAW;AACX;IACI,aAAa;IACb,sBAAsB;IACtB,WAAW;IACX,uBAAuB;IACvB,mBAAmB;IACnB,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,UAAU;IACV,8BAA8B;IAC9B,aAAa;AACjB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,yBAAyB;IACzB,eAAe;AACnB",sourcesContent:["#content {\n    display: flex;\n    flex-direction: column;\n    font-family: 'Source Sans Pro', sans-serif;\n}\n\n/* Home Page */\n/* Navbar */\nul {\n    display: flex;\n    height: 70px;\n    width: 100%;\n    background-color: #6ACE46;\n    justify-content: space-around;\n}\n\n.nav-item {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\ninput[type=\"text\"]:focus {\n    outline: none;\n    font-family: 'Source Sans Pro', sans-serif;\n    font-size: inherit;\n}\n\ninput[type=\"text\"] {\n    border: none;\n    padding: 3px;\n}\n\nbutton {\n    border: none;\n}\n\nbutton:hover, a:hover, #menu-toggle-btn:hover {\n    cursor: pointer;\n}\n\n#search-bar-li i {\n    padding-left: 6px;\n}\n\n#logo-li img {\n    width: 50px;\n    height: 50px;\n}\n\nul i {\n    color: #FFF;\n    font-size: 24px;\n}\n\n/* Menu */\n#menu {\n    background-color: #9FE885;\n    display: none;\n    flex-direction: column;\n    width: 50%;\n    height: calc(100% - 70px);\n    position: fixed;\n    top: 70px;\n    z-index: 0;\n}\n\n/* TODO: add transition to slide in load */\n\n.menu-tab {\n    display: grid;\n    padding: 16px;\n    grid-template-columns: 1fr 4fr;\n    justify-content: center;\n    align-content: center;\n    font-size: 22px;\n}\n\n.menu-tab li {\n    padding-left: 5px;\n}\n\n/* Folders Heading */\n.heading {\n    /* z-index: -2; */\n    font-size: 30px;\n    padding: 30px 0 20px 0;\n    width: 100%;\n    text-align: center;\n}\n\n/* New Folder Form */\n.new-folder-container {\n    width: 100%;\n}\n\n#folder-form {\n    display: none;\n    justify-content: center;\n    align-items: center;\n}\n\n.new-folder {\n    display: grid;\n    row-gap: 10px;\n    background-color: #6ACE46;\n    width: 90%;\n    padding: 15px;\n    row-gap: 20px;\n}\n\n.form-title {\n    font-size: 22px;\n    text-align: left;\n}\n\n.form-content {\n    display: grid;\n    grid-template-columns: 1fr 2fr;\n    row-gap: 20px;\n}\n\n.form-btns {\n    grid-column: 1 / -1;\n    display: flex;\n    justify-content: space-around;\n}\n\n.form-btn {\n    padding: 5px;\n}\n\n/* Folders Directory */\n.folders-dir {\n    height: calc(100% - 70px);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\n#opaque {\n    position: absolute;\n    height: 0;\n    width: 0;\n    top: 70px;\n    left: 50%;\n}\n\n.heading-title {\n    display: inline-block;\n}\n\n.add-btn {\n    position: absolute;\n    right: 5px;\n    color: #6ACE46;\n}\n\n/* Folder */\n.folders {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    justify-content: center;\n    align-items: center;\n    font-size: 18px;\n}\n\n.folder {\n    display: flex;\n    width: 80%;\n    justify-content: space-between;\n    padding: 10px;\n}\n\n.act-btns a:not(:last-child) {\n    padding-right: 10px;\n}\n\n.folder:hover, .folder:active {\n    background-color: #6ACE46;\n    cursor: pointer;\n}\n"],sourceRoot:""}]);const i=r},434:(e,n,t)=>{t.d(n,{Z:()=>i});var a=t(537),o=t.n(a),d=t(645),r=t.n(d)()(o());r.push([e.id,"/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n* {\n    box-sizing: border-box;\n}","",{version:3,sources:["webpack://./src/styles/reset.css"],names:[],mappings:"AAAA;;;CAGC;;AAED;;;;;;;;;;;;;CAaC,SAAS;CACT,UAAU;CACV,SAAS;CACT,eAAe;CACf,aAAa;CACb,wBAAwB;AACzB;AACA,gDAAgD;AAChD;;CAEC,cAAc;AACf;AACA;CACC,cAAc;AACf;AACA;CACC,gBAAgB;AACjB;AACA;CACC,YAAY;AACb;AACA;;CAEC,WAAW;CACX,aAAa;AACd;AACA;CACC,yBAAyB;CACzB,iBAAiB;AAClB;;AAEA;IACI,sBAAsB;AAC1B",sourcesContent:["/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n* {\n    box-sizing: border-box;\n}"],sourceRoot:""}]);const i=r},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",a=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),a&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),a&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,a,o,d){"string"==typeof e&&(e=[[null,e,void 0]]);var r={};if(a)for(var i=0;i<this.length;i++){var l=this[i][0];null!=l&&(r[l]=!0)}for(var s=0;s<e.length;s++){var c=[].concat(e[s]);a&&r[c[0]]||(void 0!==d&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=d),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),o&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=o):c[4]="".concat(o)),n.push(c))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),d="/*# ".concat(o," */"),r=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(r).concat([d]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,a=0;a<n.length;a++)if(n[a].identifier===e){t=a;break}return t}function a(e,a){for(var d={},r=[],i=0;i<e.length;i++){var l=e[i],s=a.base?l[0]+a.base:l[0],c=d[s]||0,A="".concat(s," ").concat(c);d[s]=c+1;var p=t(A),u={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==p)n[p].references++,n[p].updater(u);else{var m=o(u,a);a.byIndex=i,n.splice(i,0,{identifier:A,updater:m,references:1})}r.push(A)}return r}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var d=a(e=e||[],o=o||{});return function(e){e=e||[];for(var r=0;r<d.length;r++){var i=t(d[r]);n[i].references--}for(var l=a(e,o),s=0;s<d.length;s++){var c=t(d[s]);0===n[c].references&&(n[c].updater(),n.splice(c,1))}d=l}}},569:e=>{var n={};e.exports=function(e,t){var a=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var a="";t.supports&&(a+="@supports (".concat(t.supports,") {")),t.media&&(a+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(a+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),a+=t.css,o&&(a+="}"),t.media&&(a+="}"),t.supports&&(a+="}");var d=t.sourceMap;d&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(d))))," */")),n.styleTagTransform(a,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},271:(e,n,t)=>{e.exports=t.p+"411041d6cc347d421ae3.png"},134:(e,n,t)=>{e.exports=t.p+"0b347cb08a78889191c4.png"}},n={};function t(a){var o=n[a];if(void 0!==o)return o.exports;var d=n[a]={id:a,exports:{}};return e[a](d,d.exports,t),d.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var a in n)t.o(n,a)&&!t.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:n[a]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var a=n.getElementsByTagName("script");a.length&&(e=a[a.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),(()=>{var e=t(379),n=t.n(e),a=t(795),o=t.n(a),d=t(569),r=t.n(d),i=t(565),l=t.n(i),s=t(216),c=t.n(s),A=t(589),p=t.n(A),u=t(434),m={};m.styleTagTransform=p(),m.setAttributes=l(),m.insert=r().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=c(),n()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;var f=t(853),C={};C.styleTagTransform=p(),C.setAttributes=l(),C.insert=r().bind(null,"head"),C.domAPI=o(),C.insertStyleElement=c(),n()(f.Z,C),f.Z&&f.Z.locals&&f.Z.locals;const h=e=>{const n=document.getElementById(e);"none"!==window.getComputedStyle(n).display?n.style.display="none":["folder-form"].includes(e)?n.style.display="flex":[].includes(e)?n.style.display="grid":["add-folders-btn"].includes(e)?n.style.display="inline-block":n.style.display="block"},g=()=>{const e=document.getElementById("opaque");let n=window.getComputedStyle(e).backgroundColor;const t=document.getElementsByClassName("heading")[0];"rgba(0, 0, 0, 0)"===n?(e.style.backgroundColor="rgba(0, 0, 0, 0.6)",e.style.height="calc(100% - 70px)",e.style.width="50%",t.style.zIndex="-2"):(e.style.backgroundColor="rgba(0, 0, 0, 0)",e.style.height="0",e.style.width="0",t.style.zIndex="0")},b=e=>{alert(e)},y=e=>0===e.length,B=(e,n)=>{const t=(e=>{let n=[];for(let t=0;t<e.length;t++)n.push(e[t].name);return n})(n);return!!t.includes(e)},I=e=>""===e.replace(/\s/g,""),v=e=>0==e,x=(e,n)=>(console.log(e,n),e===n);class E{constructor(e,n=[]){this.name=e,this.tasks=n}}const w=e=>{const n=document.createElement("div");n.classList.add("folder");const t=document.createElement("h2");t.classList.add("folder-name"),t.innerText=e,n.appendChild(t),k.detectFolderClick(t);const a=document.createElement("div");a.classList.add("act-btns"),n.appendChild(a);const o=document.createElement("a");o.classList.add("edit-btn"),a.appendChild(o);const d=document.createElement("i");d.classList.add("fas"),d.classList.add("fa-edit"),o.appendChild(d),k.detectEditFolder(d);const r=document.createElement("a");r.classList.add("del-btn"),a.appendChild(r);const i=document.createElement("i");return i.classList.add("fas"),i.classList.add("fa-trash-alt"),r.appendChild(i),k.detectDeleteFolder(i),n},L=(()=>{let e=[new E("Inbox",[])];return{addFolder:n=>{if(y(e)){let t=new E(n,[]);e.push(t),M.displayMainPage(e)}else if(B(n,e))z("new-folder-form"),b("Folder already exists!");else if(I(n))z("new-folder-form"),b("Folder name cannot be empty!");else{let t=new E(n,[]);e.push(t),M.displayMainPage(e)}},deleteFolder:(n,t)=>{v(n)?b(`Cannot delete ${e[n].name}! Must have at least 1 folder.`):(e.splice(n,1),(e=>{e.innerHTML="",e.remove()})(t),M.displayMainPage(e))},editFolder:(n,t,a,o)=>{x(a,o)?(e[n].name=a,M.displayMainPage(e)):B(a,e)?b("Folder already exists!"):I(a)?b("Folder name cannot be empty!"):(e[n].name=a,M.displayMainPage(e))},getFolders:()=>e,getFolder:n=>e[n]}})(),k={detectMenuClick:()=>{document.getElementById("menu-toggle-btn").addEventListener("click",(()=>{h("menu"),g()})),document.getElementById("opaque").addEventListener("click",(()=>{h("menu"),g()}))},detectAddFolder:()=>{document.getElementById("add-folders-btn").addEventListener("click",(()=>{h("add-folders-btn"),h("folder-form")}))},detectFolderCancelBtn:()=>{document.getElementById("cancel-folder-btn").addEventListener("click",(e=>{e.preventDefault(),z("new-folder-form"),h("folder-form"),h("add-folders-btn")}))},detectFolderSubmitBtn:()=>{document.getElementById("create-folder-btn").addEventListener("click",(e=>{e.preventDefault(),h("folder-form"),h("add-folders-btn");let n=F();z("new-folder-form"),L.addFolder(n)}))},detectEditFolder:e=>{e.addEventListener("click",(e=>{let n=e.target.parentElement.parentElement.parentElement,t=n.children[0].innerText;n.dataset.oldName=t,T(n),S(n)}))},detectDeleteFolder:e=>{e.addEventListener("click",(e=>{let n=e.target.parentElement.parentElement.parentElement,t=n.dataset.index;L.deleteFolder(t,n)}))},detectSaveEditFolder:e=>{e.addEventListener("click",(e=>{let n=e.target.parentElement,t=n.dataset.index,a=j(n),o=n.dataset.oldName;L.editFolder(t,n,a,o)}))},detectFolderClick:e=>{e.addEventListener("click",(e=>{let n=e.target.parentElement.dataset.index;const t=L.getFolder(n);M.displayFolderPage(t)}))}},F=()=>document.getElementById("folder-name-input").value,T=e=>{const n=Array.from(e.children),t=n[n.length-1];e.removeChild(t),t.innerHTML="",t.remove()},S=e=>{const n=e.children[0].innerText;e.innerHTML="",e.style.backgroundColor="#6ACE46";const t=document.createElement("input");t.type="text",t.value=n,e.appendChild(t);const a=document.createElement("i");a.classList.add("fas"),a.classList.add("fa-check"),e.appendChild(a),k.detectSaveEditFolder(a)},j=e=>Array.from(e.children)[0].value,z=e=>{document.getElementById(e).reset()};t(271);var q=t(134);const M=(()=>{const e=document.getElementById("content"),n=()=>{(e=>{const n=document.createElement("header");e.appendChild(n);const t=document.createElement("nav");n.appendChild(t);const a=document.createElement("ul");a.classList.add("nav-items"),t.appendChild(a);const o=(()=>{const e=document.createElement("li");e.id="logo-li",e.classList.add("nav-item");const n=new Image;return n.src=q,e.appendChild(n),e})();a.appendChild(o);const d=(()=>{const e=document.createElement("li");e.id="search-bar-li",e.classList.add("nav-item");const n=document.createElement("input");n.id="search",n.type="text",n.placeholder="Search..",e.appendChild(n);const t=document.createElement("i");return t.classList.add("fas"),t.classList.add("fa-search"),e.appendChild(t),e})();a.appendChild(d);const r=(()=>{const e=document.createElement("li");e.id="menu-toggle-li",e.classList.add("nav-item");const n=document.createElement("i");return n.id="menu-toggle-btn",n.classList.add("fas"),n.classList.add("fa-bars"),e.appendChild(n),e})();a.appendChild(r)})(e)};return{displayHeader:n,displayMainPage:t=>{e.innerHTML="",n(),((e,n)=>{const t=(()=>{const e=document.createElement("div");e.id="menu";const n=document.createElement("div");n.id="folders-title",n.classList.add("menu-tab"),e.appendChild(n);const t=document.createElement("i");t.classList.add("fas"),t.classList.add("fa-folder"),n.appendChild(t);const a=document.createElement("a");a.classList.add("menu-title"),a.innerText="Folders",n.appendChild(a);const o=document.createElement("div");o.id="today-title",o.classList.add("menu-tab"),e.appendChild(o);const d=document.createElement("i");d.classList.add("fas"),d.classList.add("fa-calendar-day"),o.appendChild(d);const r=document.createElement("a");r.classList.add("menu-title"),r.innerText="Today",o.appendChild(r);const i=document.createElement("div");i.id="this-week-title",i.classList.add("menu-tab"),e.appendChild(i);const l=document.createElement("i");l.classList.add("fas"),l.classList.add("fa-calendar-week"),i.appendChild(l);const s=document.createElement("a");s.classList.add("menu-title"),s.innerText="This Week",i.appendChild(s);const c=document.createElement("div");c.id="folders-title",c.classList.add("menu-tab"),e.appendChild(c);const A=document.createElement("i");A.classList.add("fas"),A.classList.add("fa-tasks"),c.appendChild(A);const p=document.createElement("a");return p.classList.add("menu-title"),p.innerText="All Tasks",c.appendChild(p),e})(),a=document.createElement("div");a.id="opaque";const o=(e=>{const n=document.createElement("div");n.classList.add("heading"),n.id="heading";const t=document.createElement("h1");t.classList.add("heading-title"),t.innerText=`${e[0].toUpperCase()+e.substring(1)}`,n.appendChild(t);const a=document.createElement("a");a.classList.add("add-btn"),a.id="add-folders-btn",n.appendChild(a);const o=document.createElement("i");return o.classList.add("fas"),o.classList.add("fa-plus-circle"),a.appendChild(o),n})("folders"),d=(()=>{const e=document.createElement("div");e.classList.add("new-folder-container"),e.id="folder-form";const n=document.createElement("form");n.id="new-folder-form",n.classList.add("new-folder"),e.appendChild(n);const t=document.createElement("h2");t.classList.add("form-title"),t.innerText="New Folder",n.appendChild(t);const a=document.createElement("div");a.classList.add("form-content"),n.appendChild(a);const o=document.createElement("label");o.for="folder-name",o.innerText="Folder Name",a.appendChild(o);const d=document.createElement("input");d.type="text",d.name="folder-name",d.id="folder-name-input",d.classList.add("folder-name"),d.placeholder="Folder name..",a.appendChild(d);const r=document.createElement("div");r.classList.add("form-btns"),a.appendChild(r);const i=document.createElement("button");i.id="create-folder-btn",i.classList.add("form-btn"),i.type="submit",i.innerText="Create",r.appendChild(i);const l=document.createElement("button");return l.id="cancel-folder-btn",l.classList.add("form-btn"),l.type="submit",l.innerText="Cancel",r.appendChild(l),e})(),r=(e=>{const n=document.createElement("div");n.classList.add("folders-dir"),n.id="folders-dir";const t=document.createElement("div");t.classList.add("folders"),n.appendChild(t);for(let n=0;n<e.length;n++){const a=w(e[n].name);a.dataset.index=n,t.appendChild(a)}return n})(n);e.appendChild(t),e.appendChild(a),e.appendChild(o),e.appendChild(d),e.appendChild(r)})(e,t),k.detectMenuClick(),k.detectAddFolder(),k.detectFolderCancelBtn(),k.detectFolderSubmitBtn()},displayFolderPage:e=>{console.log(e.name)}}})();M.displayHeader();let P=L.getFolders();M.displayMainPage(P)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,